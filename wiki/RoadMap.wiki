#summary Features and changes that are planned for future versions

=== Shorter Term (Probably in 1.0) ===

*Dynamic parameters* -- [ParticleController]s and possibly other components would support dynamic parameters that can change over time, either via a step function, linear interpolator or spline.

*Improved domains* -- native code [Domain]s with support for more shapes, such as curves, cones, cylinders, toroids, heightmaps and tri-meshes. _(in progress)_

*Texturizers* -- Built-in support for texture atlases, texture coordinate generation, texture animation and 3D textures.

*Windows Binary* -- Precompiled win32 binary installer

*Display list renderer* -- Enable particles that have complex geometry, shading and texturing

*SSE optimizations* -- Vector code written using SSE intrinsics where supported

*More Controllers* -- Attractor, avoid, weathervane, destination.

*Particle Effects* -- High-level parameterized class API for complete drop-in effects orchestrating groups, controllers and renderers. Effects will include things like explosions, debris, fire, smoke, lightning, beams, rain, etc.

=== Longer Term (post 1.0) ===

*Particle-Particle Collision* -- For collective and liquid effects.

*String and Cloth Simulation* -- Special particle groups/controllers for simulation of cloth, fibers, etc.

*Flocking/swarm behavior* -- For simulating collective flying behavior, like bees and birds

*Noise integration* -- Support for more complex behaviors and parameterization using Perlin noise

*Vector fields* -- Enables particle attribute dependancies, like velocity based on position, color based on velocity, etc.

*GUI Effect Editor* -- Point-and-click goodness